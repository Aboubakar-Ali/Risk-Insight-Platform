version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: risk-insight-postgres
    environment:
      POSTGRES_DB: risk_insight
      POSTGRES_USER: risk_user
      POSTGRES_PASSWORD: risk_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - risk-network

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: risk-insight-backend
    environment:
      - DATABASE_URL=postgresql://risk_user:risk_password@postgres:5432/risk_insight
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - risk-network

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: risk-insight-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - risk-network

  # Moteur ML (optionnel, peut être intégré au backend)
  ml-engine:
    build:
      context: ./ml-engine
      dockerfile: Dockerfile
    container_name: risk-insight-ml
    environment:
      - DATABASE_URL=postgresql://risk_user:risk_password@postgres:5432/risk_insight
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    volumes:
      - ./ml-engine:/app
    networks:
      - risk-network

volumes:
  postgres_data:

networks:
  risk-network:
    driver: bridge 